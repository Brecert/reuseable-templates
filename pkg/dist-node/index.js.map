{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["/**\r\n * creates a reuseable template literal that can be called with the arguements to fill in the types\r\n */\r\nexport default function fmt(strings, ...placeholderTypes) {\r\n    const constIndexes = placeholderTypes.map((p, i) => {\r\n        if (p !== Number && p !== String && p !== Object && p !== JSON) {\r\n            return i;\r\n        }\r\n    }).filter(p => p !== undefined);\r\n    return function (...placeholders) {\r\n        let offset = 0;\r\n        return strings.map((s, i) => {\r\n            const formatted = () => {\r\n                switch (true) {\r\n                    case constIndexes.includes(i): {\r\n                        offset += 1;\r\n                        return placeholderTypes[i];\r\n                    }\r\n                    case placeholderTypes[i] === JSON || placeholderTypes[i] === Object: {\r\n                        return JSON.stringify(placeholders[i]);\r\n                    }\r\n                    case placeholderTypes[i] === String: {\r\n                        return `${placeholders[i - offset]}`;\r\n                    }\r\n                    case placeholderTypes[i] === Number: {\r\n                        const n = placeholders[i - offset];\r\n                        if (Number.isInteger(n)) {\r\n                            return `${n}`;\r\n                        }\r\n                        else {\r\n                            return Number.parseFloat(n).valueOf();\r\n                        }\r\n                    }\r\n                    default: {\r\n                        return placeholders[i - offset] || \"\";\r\n                    }\r\n                }\r\n            };\r\n            return `${s}${formatted()}`;\r\n        }).join('');\r\n    };\r\n}\r\n"],"names":["fmt","strings","placeholderTypes","constIndexes","map","p","i","Number","String","Object","JSON","filter","undefined","placeholders","offset","s","formatted","includes","stringify","n","isInteger","parseFloat","valueOf","join"],"mappings":";;;;AAAA;;;AAGA,AAAe,SAASA,GAAT,CAAaC,OAAb,EAAsB,GAAGC,gBAAzB,EAA2C;QAChDC,YAAY,GAAGD,gBAAgB,CAACE,GAAjB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;QAC5CD,CAAC,KAAKE,MAAN,IAAgBF,CAAC,KAAKG,MAAtB,IAAgCH,CAAC,KAAKI,MAAtC,IAAgDJ,CAAC,KAAKK,IAA1D,EAAgE;aACrDJ,CAAP;;GAFa,EAIlBK,MAJkB,CAIXN,CAAC,IAAIA,CAAC,KAAKO,SAJA,CAArB;SAKO,UAAU,GAAGC,YAAb,EAA2B;QAC1BC,MAAM,GAAG,CAAb;WACOb,OAAO,CAACG,GAAR,CAAY,CAACW,CAAD,EAAIT,CAAJ,KAAU;YACnBU,SAAS,GAAG,MAAM;gBACZ,IAAR;eACSb,YAAY,CAACc,QAAb,CAAsBX,CAAtB,CAAL;;cACIQ,MAAM,IAAI,CAAV;qBACOZ,gBAAgB,CAACI,CAAD,CAAvB;;;eAECJ,gBAAgB,CAACI,CAAD,CAAhB,KAAwBI,IAAxB,IAAgCR,gBAAgB,CAACI,CAAD,CAAhB,KAAwBG,MAA7D;;qBACWC,IAAI,CAACQ,SAAL,CAAeL,YAAY,CAACP,CAAD,CAA3B,CAAP;;;eAECJ,gBAAgB,CAACI,CAAD,CAAhB,KAAwBE,MAA7B;;qBACY,GAAEK,YAAY,CAACP,CAAC,GAAGQ,MAAL,CAAa,EAAnC;;;eAECZ,gBAAgB,CAACI,CAAD,CAAhB,KAAwBC,MAA7B;;oBACUY,CAAC,GAAGN,YAAY,CAACP,CAAC,GAAGQ,MAAL,CAAtB;;kBACIP,MAAM,CAACa,SAAP,CAAiBD,CAAjB,CAAJ,EAAyB;uBACb,GAAEA,CAAE,EAAZ;eADJ,MAGK;uBACMZ,MAAM,CAACc,UAAP,CAAkBF,CAAlB,EAAqBG,OAArB,EAAP;;;;;;qBAIGT,YAAY,CAACP,CAAC,GAAGQ,MAAL,CAAZ,IAA4B,EAAnC;;;OAtBZ;;aA0BQ,GAAEC,CAAE,GAAEC,SAAS,EAAG,EAA1B;KA3BG,EA4BJO,IA5BI,CA4BC,EA5BD,CAAP;GAFJ;;;;;"}